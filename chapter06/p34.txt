Consider following matrix transpose routine 

typedef int array[4][4];

void transpose2(array dst, array src)
{
    int i, j;

    for (i = 0; i < 4; i++) {
        for (j = 0; j < 4; j++) {
            dst[j][i] = src[i][j];
        }
    }
}

Assume this code runs on a machine with the following properties:
- sizeof(int) = 4
- The src array starts at address 0 and the dst array starts at address 64
(decimal)
- There is a single L1 data cache that is direct-mapped, write-through, write-
allocate, with a block size of 16 bytes
- The cache has a total size of 32 data bytes, and the cache is initially empty

For each row and col, indicate whether the access to src[row][col] and
dst[row][col] is a hit (h) or a miss (m)

dst
	 c0		c1	   c2     c3
r0   m      m      m      m
r1   m      m      m      m
r2   m      m      m      m
r3   m      m      m      m

src
	 c0     c1     c2     c3
r0   m      m      h      m
r1   m      h      m      h
r2   m      m      h      m
r3   m      h      m      h
