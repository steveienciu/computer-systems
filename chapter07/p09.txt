Consider the following program, which consists of two object modules:

/* foo6.c */
void p2(void);

int main()
{
    p2();
    return 0;
}

/* bar6.c */
#include <stdio.h>

char main;

void p2()
{
    printf("0x%x\n", main);
}

When this program is compiled and executed on an x86-64 Linux system, it
prints the string 0x48\n and terminates normally, even though function p2 never
initializes variable main. Can you explain this?

The reason why this happens is because main in bar6 is considered a weak symbol while 
main in foo6 is considered a strong symbol. The linker will choose the strong symbol
